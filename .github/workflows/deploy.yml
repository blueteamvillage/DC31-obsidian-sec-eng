name: Deploy

on:
  push:
    branches:
      - main
      # - devel-deploy
  pull_request:

env:
  PYTHON_VERSION: "3.10"
  TERRAFORM_VERSION: "1.3.7"
  AWS_ACCOUNT_ID: "106453756913"
  ANSIBLE_EXTRA_VARS: "-v"

permissions:
  id-token: write # required to use OIDC authentication
  contents: read # This is required for actions/checkout@v2

jobs:
  deployment:
    runs-on: ubuntu-22.04
    steps:
      ########################### Checkout code ###########################
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: us-east-2
          role-to-assume: "arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-actions"

      ########################### Terraform ###########################
      # https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "${{ env.TERRAFORM_VERSION }}"

      - name: Write SSH public key to disk
        run: echo ${{ secrets.SSH_PUB_KEY }} > terraform/ssh_keys/id_ed25519.pub

      - name: Terraform Init
        id: init
        run: cd terraform/ && terraform init

      - name: Terraform Plan
        id: plan
        run: cd terraform/ && terraform plan -lock=false

      - name: Terraform Apply
        id: apply
        run: cd terraform/ && terraform apply

      ########################### ansible ###########################
      # using hosts.ini generated by terraform
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
          cache: 'pip'

      - name: Install Python deps
        run: pip install -r ci/requirements.txt

      - name: Install Ansible
        run: pip install ansible

      - name: Ansible inventory
        run: cat ansible/hosts.ini

      - name: Set ansible.cfg
        run: |
          { echo '[defaults]'; echo 'callbacks_enabled = profile_tasks, timer';echo 'ansible_python_interpreter: /usr/bin/python3'; } >> ansible/ansible.cfg

      - name: ssh-keyscan
        run: |
          cd terraform && \
            ./add_hosts.sh
      - name: Ansible deploy
        run: |
          cd ansible && \
            (for playbook in *.yml; do
              ansible-playbook -i hosts.ini ${ANSIBLE_EXTRA_VARS} $playbook
            done)
      - name: Troubleshooting - Ansible ping
        run: |
          cd ansible && \
            ansible -i hosts.ini -m ping all
        if: ${{ always() }}
        continue-on-error: true
      - name: Troubleshooting - Ansible setup
        run: |
          cd ansible && \
            ansible -i hosts.ini -m setup all
        if: ${{ always() }}
        continue-on-error: true
