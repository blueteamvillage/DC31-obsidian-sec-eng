---
{{ ansible_managed | comment }}
#
# Example pipeline inspired from docs
# https://docs.cribl.io/stream/usecase-sampling
#
output: default
streamtags: []
groups: {}
asyncFuncTimeout: 1000
functions:
  - id: dynamic_sampling
    filter: "true"
    disabled: null
    conf:
      mode: log
      keyExpr: "`${host}`"
      samplePeriod: 30
      minEvents: 30
      maxSampleRate: 100
  - id: regex_extract
    filter: sourcetype=='access_combined'
    disabled: null
    conf:
      source: _raw
      iterations: 100
      overwrite: false
      regex: /"\s(?<__status>\d+)/
    description: Extract status from access logs
  - id: sampling
    filter: sourcetype=='access_combined'
    disabled: null
    conf:
      rules:
        - filter: __status == 200
          rate: 5
    description: Check for status 200 and sample 5:1
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Example masking password=xyz
  - id: mask
    filter: "true"
    disabled: null
    conf:
      rules:
        - matchRegex: /password=(.*?)/
          replaceExpr: MASKED_PASSWORD
      fields:
        - _raw
      depth: 5
    description: Mask secret pattern
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Osquery processing
  - id: json_unroll
    filter: __inputId=='elastic:in_elastic' && agent.type == 'filebeat' &&
      log.file.path == '/var/log/osquery/osqueryd.results.log'
    disabled: null
    conf:
      path: message
    description: osqueryd
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Sysmonforlinux processing
  - id: regex_extract
    filter: __inputId=='elastic:in_elastic' && agent.type == 'filebeat' &&
      log.file.path == '/var/log/sysmon/sysmon.log'
    disabled: null
    conf:
      source: message
      iterations: 100
      overwrite: false
      regex: "/^.* sysmon: (?<sysmonxml>.*)/"
    description: sysmonforlinux-xml
  - id: flatten
    filter: false && __inputId=='elastic:in_elastic' && agent.type == 'filebeat' &&
      log.file.path == '/var/log/sysmon/sysmon.log'
    disabled: null
    conf:
      fields:
        - sysmonxml
      prefix: ""
      depth: 5
      delimiter: _
    description: sysmonforlinux-flatten
  - id: xml_unroll
    filter: false && __inputId=='elastic:in_elastic' && agent.type == 'filebeat' &&
      log.file.path == '/var/log/sysmon/sysmon.log'
    disabled: null
    conf:
      unrollIdxField: unroll_idx
      pretty: false
      unroll: /Event\.System\.TimeCreated$/
      inherit: /^Event.EventData/
    description: sysmonforlinux-xmlunroll
  - id: eval
    filter: false && __inputId=='elastic:in_elastic' && agent.type == 'filebeat' &&
      log.file.path == '/var/log/sysmon/sysmon.log'
    disabled: null
    conf:
      keep:
        - sysmonxml
      remove:
        - "*"
  - id: comment
    filter: "true"
    disabled: null
    conf:
      comment: Set index
  - id: eval
    filter: agent.type == 'winlogbeat' || agent.type == 'filebeat'
    disabled: null
    conf:
      add:
        - name: __index
          value: '"so-beats-2023.04.01"'
description: test
