# This is an example nginx configuration file that has been modified by certbot to add SSL/TLS information.

# Unfortunately, Certbot adds a `listen 80` directive into our server block, which interferes with redirect behavior.
# To combat this, we declare a second server that performs HTTP-->HTTPS redirects using the `default_server` directive.
# The `default_server` directive is key because it forces nginx to assume that the first server is the *only* server listening on port 80.

# 1) Why not save the final config and simply upload that?
# This breaks the nginx installation process. When systemd attempts to load the nginx service, it will verify the configuration in the process
# and attempt to load /etc/letsencrypt/options-ssl-nginx.conf. This file doesn't exist yet because we haven't

# 2) Well then why not use certbot to generate your certificate first and *then* upload the nginx configuration?
# a) Without nginx, nothing is actually listening on port 80/443, which will cause us to fail the certbot challenge process.
# b) When using the nginx plugin, certbot will *also* try to verify our nginx config, which will lead back to 1).

# 3) Why don't you use the *certonly* option when generating your certificate?
# This works. You would have to upload the SSL configuration information or have two configs prepared ahead of time, then restart nginx.

# Any solution is hacky, so we went with the one with least steps.

server {
    listen 80 default_server;
    server_name _;
    server_tokens off;

    return 301 https://$host$request_uri;
}

server {
    server_name velociraptor.magnumtempusfinancial.com;
    server_tokens off;

    location / {
        proxy_pass http://127.0.0.1:8889;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_request_buffering off;
    }

    location /frontend {
        proxy_pass http://127.0.0.1:8000/frontend;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_request_buffering off;
    }

    listen 80; # managed by Certbot

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/magnumtempusfinancial.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/magnumtempusfinancial.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
