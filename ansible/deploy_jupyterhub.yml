---

- name: Setup Jupyterhub over k3s server
  hosts: jupyterhub_server
  become: yes
  become_user: root
  pre_tasks:
    - import_tasks: 'roles/linux/init_linux.yml'
    # https://docs.k3s.io/security/hardening-guide#set-kernel-parameters
    - name: Set sysctl for k3s
      ansible.posix.sysctl:
        name: "{{ item.n }}"
        value: "{{ item.v }}"
        sysctl_file: /etc/sysctl.d/20-k3s.conf
        reload: true
      loop:
        - n: net.ipv4.ip_forward
          v: '1'
        - n: vm.panic_on_oom
          v: '0'
        - n: vm.overcommit_memory
          v: '1'
        - n: kernel.panic
          v: '10'
        # kubelet.go:1466] "Failed to start ContainerManager" err="invalid kernel flag: kernel/panic_on_oops, expected value: 1, actual value: 0"
        - n: kernel.panic_on_oops
          v: '1'
        - n: kernel.keys.root_maxbytes
          v: '25000000'
    - name: Ensure k3s modules dependencies are loaded.
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k3s.conf
        mode: '0644'
        content:
          br_netfilter
          overlay
          aufs
          ip_vs
          nf_nat
          xt_conntrack
  roles:
    - geerlingguy.docker
    - geerlingguy.filebeat
    - juju4.osquery
    - juju4.sysmon
    - node_exporter
    - mdsketch.teleport
    # - cyverse_ansible.ansible_k3s
    # - cyverse_ansible.ansible_jupyterhub_docker
    # - juju4.falco
    # - juju4.harden_nginx
  handlers:
    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes
    - name: Restart jupyterhub
      ansible.builtin.service:
        name: jupyterhub
        state: restarted
  tasks:
    # Backup plan: direct install as the docker one on k3s is still failing
    # https://jupyterhub.readthedocs.io/en/stable/tutorial/quickstart.html
    - name: Install jupyterhub package dependencies
      ansible.builtin.package:
        name:
          - nodejs
          - npm
          - python3-pip
        state: present
    - name: Install jupyterhub pip dependencies
      ansible.builtin.pip:
        name:
          - jupyterhub
          - oauthenticator
          - git+https://github.com/KamalGalrani/jupyterhub-nativespawner.git
          - jupyterlab
          - notebook
          # https://msticpy.readthedocs.io/en/latest/getting_started/Installing.html
          - 'msticpy[azure,splunk,ml,dev]'
        state: present
    - name: Install configurable-http-proxy node.js package globally.
      community.general.npm:
        name: configurable-http-proxy
        global: true
    - name: Ensure users directory exists
      ansible.builtin.file:
        dest: /opt/jupyterhub/users
        mode: '0755'
        state: directory
    - name: Configure jupyterhub_config.py
      ansible.builtin.template:
        src: jupyterhub_config.py.j2
        dest: /etc/jupyterhub_config.py
        mode: '0600'
    - name: Install jupyterhub systemd configuration
      ansible.builtin.template:
        src: jupyterhub-systemd.service.j2
        dest: /lib/systemd/system/jupyterhub.service
        mode: '0644'
        backup: yes
      register: systemd
      notify:
        - Reload systemd
        - Restart jupyterhub
    - name: Enable and start jupyterhub systemd service
      ansible.builtin.service:
        name: jupyterhub
        enabled: yes
        state: 'started'
    - name: Copy msticpyconfig.yaml
      ansible.builtin.template:
        src: msticpyconfig.yaml.j2
        dest: /home/ubuntu/msticpyconfig.yaml
        mode: '0600'
    - name: Copy msticpy_test.ipynb
      ansible.builtin.copy:
        src: msticpy_test.ipynb
        dest: /home/ubuntu/msticpy_test.ipynb
        mode: '0644'
